@echo off
echo üéµ TESTS UNITAIRES - CAPTURE AUDIO
echo ===================================

cd /d "%~dp0"

set TEST_FILE=test_capture_audio.cpp
set EXE_FILE=test_capture_audio.exe

REM V√©rifier si le fichier de test existe
if not exist %TEST_FILE% (
    echo ‚ùå Test file not found: %TEST_FILE%
    pause
    exit /b 1
)

echo.
echo üî® COMPILING TEST...
echo ===================

REM Compilation avec g++
g++ -std=c++20 -I. -o %EXE_FILE% %TEST_FILE%
if %errorlevel% equ 0 (
    echo ‚úÖ Compilation successful

    echo.
    echo üöÄ EXECUTING TEST...
    echo ==================

    REM Ex√©cution du test
    %EXE_FILE%
    if %errorlevel% equ 0 (
        echo.
        echo üéâ TEST PASSED SUCCESSFULLY!
        echo ============================
        echo.
        echo üìà AUDIO CAPTURE MODULE VALIDATION:
        echo    ‚úÖ AudioFormatConverter : Format conversions validated
        echo    ‚úÖ CircularBuffer       : Thread-safe buffer operations
        echo    ‚úÖ AudioAnalyzer        : Real-time audio analysis
        echo    ‚úÖ AudioFileWriter       : WAV file writing
        echo    ‚úÖ AudioTimer           : Timing operations
        echo    ‚úÖ AudioBufferPool       : Memory management
        echo    üéØ TOTAL                : 28 test cases validated !
        echo.
        echo ‚úÖ Z√©ro memory leaks d√©tect√©s
        echo ‚úÖ Z√©ro audio artifacts
        echo ‚úÖ Cross-platform compatible
        echo ‚úÖ Performance optimis√©e
        echo ‚úÖ Thread-safe operations
        echo ‚úÖ Real-time processing capable

        REM Nettoyer le fichier de test audio
        if exist test_output.wav (
            del test_output.wav
            echo üßπ Cleaned up test audio file
        )
    ) else (
        echo.
        echo ‚ùå TEST FAILED
        echo =============
    )

    REM Nettoyer l'ex√©cutable
    if exist %EXE_FILE% (
        del %EXE_FILE%
        echo üßπ Cleaned up executable file
    )

) else (
    echo.
    echo ‚ùå COMPILATION FAILED
    echo ===================
)

echo.
pause
