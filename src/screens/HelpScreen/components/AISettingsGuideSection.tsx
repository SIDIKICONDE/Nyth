import { useTheme } from "@/contexts/ThemeContext";
import { useTranslation } from "@/hooks/useTranslation";
import MaterialCommunityIcons from "react-native-vector-icons/MaterialCommunityIcons";
import React, { useState } from "react";
import { ScrollView, Text, TouchableOpacity, View } from "react-native";
import Animated, { FadeInDown } from "react-native-reanimated";
import tw from "twrnc";

interface AISettingsContent {
  type: "text" | "list" | "steps" | "warning" | "tip";
  content: string | string[];
  title?: string;
}

interface AISettingsGuideItem {
  id: string;
  title: string;
  description: string;
  icon: string;
  color: string;
  content: AISettingsContent[];
}

export const AISettingsGuideSection: React.FC = () => {
  const { currentTheme } = useTheme();
  const { t } = useTranslation();
  const [selectedItem, setSelectedItem] = useState<AISettingsGuideItem | null>(
    null
  );

  const aiSettingsGuides: AISettingsGuideItem[] = [
    {
      id: "ai-settings-overview",
      title: "Vue d'ensemble des param√®tres IA",
      description:
        "Introduction compl√®te aux r√©glages de l'intelligence artificielle",
      icon: "cog-outline",
      color: "#3B82F6",
      content: [
        {
          type: "text",
          content:
            "Les param√®tres IA de Nyth centralisent toute la configuration de l'intelligence artificielle : providers, cl√©s API, s√©curit√©, ordre de priorit√© et m√©moire IA. C'est votre centre de contr√¥le pour une exp√©rience IA optimale.",
        },
        {
          type: "list",
          title: "üéØ Sections principales des param√®tres :",
          content: [
            "üîë Configuration des providers et cl√©s API",
            "üìä Ordre de priorit√© des mod√®les IA",
            "üîí Protection s√©curis√©e avanc√©e",
            "üß† Gestion de la m√©moire IA",
            "üõ°Ô∏è Audit de s√©curit√© des cl√©s",
            "üíæ Sauvegarde et synchronisation",
          ],
        },
        {
          type: "steps",
          title: "Acc√©der aux param√®tres IA :",
          content: [
            "Depuis l'√©cran d'accueil, appuyez sur l'ic√¥ne menu",
            "S√©lectionnez 'Param√®tres' dans le menu",
            "Choisissez la section 'IA' ou 'Intelligence Artificielle'",
            "Ou depuis le g√©n√©rateur/chat, utilisez le bouton 'Configurer'",
          ],
        },
        {
          type: "tip",
          content:
            "Configurez au moins 2-3 providers pour assurer une continuit√© de service. Les providers gratuits offrent des quotas g√©n√©reux pour commencer.",
        },
      ],
    },
    {
      id: "provider-configuration",
      title: "Configuration des providers IA",
      description: "Activez et configurez les 5 mod√®les d'IA disponibles",
      icon: "server-network",
      color: "#10B981",
      content: [
        {
          type: "text",
          content:
            "Nyth supporte 5 providers d'intelligence artificielle, chacun avec ses sp√©cialit√©s. 4 offrent des quotas gratuits g√©n√©reux, et OpenAI propose une qualit√© premium payante.",
        },
        {
          type: "list",
          title: "üÜì Providers gratuits disponibles :",
          content: [
            "üü¢ Cohere : 5M tokens/mois - Analyse et classification",
            "üîµ Google Gemini : 5M tokens/mois - Polyvalent et rapide",
            "üî¥ Mistral AI : Cr√©dits gratuits - Cr√©atif et original",
            "üü£ Hugging Face : Open source - Mod√®les vari√©s",
          ],
        },
        {
          type: "steps",
          title: "Configurer un provider √©tape par √©tape :",
          content: [
            "Localisez le provider souhait√© dans la liste",
            "Activez le toggle pour afficher le champ de cl√© API",
            "Obtenez votre cl√© API sur le site du provider",
            "Collez la cl√© dans le champ s√©curis√©",
            "Utilisez l'ic√¥ne ≈ìil pour v√©rifier la cl√©",
            "Le statut 'Configur√©' s'affiche automatiquement",
            "Sauvegardez avec le bouton en haut √† droite",
          ],
        },
        {
          type: "list",
          title: "üîó Obtenir vos cl√©s API :",
          content: [
            "Cohere : cohere.ai ‚Üí Dashboard ‚Üí API Keys",
            "Gemini : makersuite.google.com ‚Üí Get API Key",
            "Mistral : console.mistral.ai ‚Üí API Keys",
            "HuggingFace : huggingface.co ‚Üí Settings ‚Üí Tokens",
            "OpenAI : platform.openai.com ‚Üí API Keys",
            
          ],
        },
        {
          type: "warning",
          content:
            "Ne partagez JAMAIS vos cl√©s API ! Chaque cl√© est personnelle et li√©e √† votre compte. Activez la protection s√©curis√©e pour plus de s√©curit√©.",
        },
      ],
    },
    {
      id: "priority-order",
      title: "Ordre de priorit√© des providers",
      description: "Optimisez l'utilisation des mod√®les selon vos besoins",
      icon: "sort-numeric-variant",
      color: "#F59E0B",
      content: [
        {
          type: "text",
          content:
            "L'ordre de priorit√© d√©termine quel provider sera utilis√© en premier. Si le premier √©choue ou atteint sa limite, l'application bascule automatiquement vers le suivant.",
        },
        {
          type: "steps",
          title: "Modifier l'ordre de priorit√© :",
          content: [
            "Cliquez sur 'Modifier l'ordre' dans les param√®tres IA",
            "Le modal de r√©organisation s'ouvre",
            "Glissez-d√©posez les providers pour les r√©ordonner",
            "Les providers actifs sont color√©s, les inactifs gris√©s",
            "Confirmez le nouvel ordre",
            "L'ordre est sauvegard√© automatiquement",
          ],
        },
        {
          type: "list",
          title: "üèÜ Ordres recommand√©s selon l'usage :",
          content: [
            "G√©n√©ral : 1.Gemini 2.Cohere 3.Mistral",
            "Cr√©atif : 1.Mistral 2.Gemini 3.OpenAI",
            "Technique : 1.Cohere 2.Gemini 3.HuggingFace",
            "Premium : 1.OpenAI 2.Gemini 3.Cohere",
            "√âconomique : 1.HuggingFace 2.Mistral 3.Cohere",
          ],
        },
        {
          type: "tip",
          content:
            "Placez vos providers pr√©f√©r√©s en premier, mais gardez toujours 2-3 providers de secours actifs pour √©viter les interruptions.",
        },
      ],
    },
    // Bloc biom√©trie supprim√©
    {
      id: "api-key-management",
      title: "Gestion des cl√©s API",
      description: "Audit, suppression et s√©curit√© de vos cl√©s",
      icon: "key-variant",
      color: "#06B6D4",
      content: [
        {
          type: "text",
          content:
            "L'audit de s√©curit√© vous permet de visualiser, g√©rer et supprimer vos cl√©s API configur√©es. Syst√®me de suppression instantan√©e et interface s√©curis√©e inclus.",
        },
        {
          type: "list",
          title: "üõ°Ô∏è Fonctionnalit√©s de l'audit :",
          content: [
            "Liste compl√®te des cl√©s configur√©es",
            "Statuts visuels par provider",
            "Suppression s√©lective instantan√©e",
            "Masquage/affichage s√©curis√©",
            "Actualisation en temps r√©el",
            "Indicateurs de s√©curit√©",
          ],
        },
        {
          type: "steps",
          title: "Supprimer une cl√© API :",
          content: [
            "Acc√©dez √† la section 'Audit de s√©curit√©'",
            "Localisez la cl√© √† supprimer",
            "Appuyez sur l'ic√¥ne corbeille",
            "Confirmez la suppression",
            "La cl√© est effac√©e instantan√©ment",
            "Le provider devient inactif",
          ],
        },
        {
          type: "list",
          title: "üí° Bonnes pratiques :",
          content: [
            "R√©g√©n√©rez vos cl√©s tous les 3-6 mois",
            "Supprimez les cl√©s des providers inutilis√©s",
            "Ne stockez jamais les cl√©s ailleurs",
            "Utilisez des cl√©s diff√©rentes par application",
          ],
        },
        {
          type: "tip",
          content:
            "La suppression est instantan√©e et irr√©versible. Assurez-vous d'avoir une copie de sauvegarde avant de supprimer une cl√© active.",
        },
      ],
    },
    {
      id: "ai-memory-settings",
      title: "Param√®tres de la m√©moire IA",
      description: "Configurez et g√©rez la personnalisation intelligente",
      icon: "brain",
      color: "#EC4899",
      content: [
        {
          type: "text",
          content:
            "La m√©moire IA analyse vos conversations pour personnaliser l'exp√©rience. Vous gardez le contr√¥le total avec options d'activation, consultation et suppression des donn√©es.",
        },
        {
          type: "list",
          title: "üß† Options de la m√©moire IA :",
          content: [
            "Activation/d√©sactivation globale",
            "Consultation des donn√©es m√©moris√©es",
            "Suppression s√©lective d'informations",
            "R√©initialisation compl√®te",
            "Export des donn√©es (√† venir)",
            "Param√®tres de confidentialit√©",
          ],
        },
        {
          type: "steps",
          title: "G√©rer la m√©moire IA :",
          content: [
            "Acc√©dez √† Param√®tres ‚Üí M√©moire IA",
            "Toggle ON/OFF pour activer/d√©sactiver",
            "Cliquez 'Voir les donn√©es' pour consulter",
            "S√©lectionnez des √©l√©ments pour suppression",
            "Ou utilisez 'Supprimer tout' pour r√©initialiser",
            "Confirmez vos actions",
          ],
        },
        {
          type: "list",
          title: "üìä Donn√©es m√©moris√©es :",
          content: [
            "Pr√©f√©rences cr√©atives et styles favoris",
            "Habitudes de travail et processus",
            "Objectifs et m√©triques personnels",
            "Comp√©tences et domaines d'expertise",
            "Instructions r√©currentes",
            "Contexte professionnel",
          ],
        },
        {
          type: "warning",
          content:
            "La suppression des donn√©es de m√©moire est irr√©versible. L'IA devra r√©apprendre vos pr√©f√©rences depuis z√©ro.",
        },
      ],
    },
    {
      id: "troubleshooting-settings",
      title: "D√©pannage des param√®tres IA",
      description: "Solutions aux probl√®mes de configuration courants",
      icon: "tools",
      color: "#EF4444",
      content: [
        {
          type: "text",
          content:
            "R√©solvez rapidement les probl√®mes de configuration pour maintenir vos param√®tres IA op√©rationnels.",
        },
        {
          type: "list",
          title: "‚ùå Probl√®mes fr√©quents :",
          content: [
            "Cl√© API non reconnue ou invalide",
            "Toggle qui ne s'active pas",
            "Ordre de priorit√© qui ne se sauvegarde pas",
            "Protection biom√©trique qui √©choue",
            "M√©moire IA qui ne fonctionne pas",
          ],
        },
        {
          type: "steps",
          title: "Solutions pas √† pas :",
          content: [
            "V√©rifiez le format de la cl√© API (pas d'espaces)",
            "Assurez-vous d'avoir une connexion internet",
            "Red√©marrez l'application apr√®s configuration",
            "V√©rifiez les permissions de l'application",
            "Contactez le support si persistant",
          ],
        },
        {
          type: "list",
          title: "üîß Solutions sp√©cifiques :",
          content: [
            "Cl√© invalide ‚Üí V√©rifiez sur le site du provider",
            "Toggle bloqu√© ‚Üí Au moins une cl√© doit √™tre valide",
            "Ordre non sauv√© ‚Üí Attendez la confirmation",
            "Biom√©trie √©choue ‚Üí Reconfigurez Face ID/Touch ID",
            "M√©moire inactive ‚Üí Activez d'abord un provider",
          ],
        },
        {
          type: "tip",
          content:
            "En cas de probl√®me persistant, essayez de supprimer et reconfigurer le provider probl√©matique depuis z√©ro.",
        },
      ],
    },
  ];

  const renderContent = (content: AISettingsContent) => {
    switch (content.type) {
      case "text":
        return (
          <Text
            style={[
              tw`text-base leading-6 mb-4`,
              { color: currentTheme.colors.text },
            ]}
          >
            {content.content}
          </Text>
        );

      case "list":
        return (
          <View style={tw`mb-4`}>
            {content.title && (
              <Text
                style={[
                  tw`text-lg font-semibold mb-2`,
                  { color: currentTheme.colors.text },
                ]}
              >
                {content.title}
              </Text>
            )}
            {Array.isArray(content.content) &&
              content.content.map((item, index) => (
                <View key={index} style={tw`flex-row items-start mb-2`}>
                  <Text
                    style={[
                      tw`text-base mr-2`,
                      { color: currentTheme.colors.textSecondary },
                    ]}
                  >
                    ‚Ä¢
                  </Text>
                  <Text
                    style={[
                      tw`text-base flex-1 leading-6`,
                      { color: currentTheme.colors.text },
                    ]}
                  >
                    {item}
                  </Text>
                </View>
              ))}
          </View>
        );

      case "steps":
        return (
          <View style={tw`mb-4`}>
            {content.title && (
              <Text
                style={[
                  tw`text-lg font-semibold mb-2`,
                  { color: currentTheme.colors.text },
                ]}
              >
                {content.title}
              </Text>
            )}
            {Array.isArray(content.content) &&
              content.content.map((step, index) => (
                <View key={index} style={tw`flex-row items-start mb-2`}>
                  <View
                    style={[
                      tw`w-6 h-6 rounded-full items-center justify-center mr-3 mt-0.5`,
                      { backgroundColor: currentTheme.colors.primary },
                    ]}
                  >
                    <Text
                      style={[
                        tw`text-sm font-bold`,
                        { color: currentTheme.colors.background },
                      ]}
                    >
                      {index + 1}
                    </Text>
                  </View>
                  <Text
                    style={[
                      tw`text-base flex-1 leading-6`,
                      { color: currentTheme.colors.text },
                    ]}
                  >
                    {step}
                  </Text>
                </View>
              ))}
          </View>
        );

      case "warning":
        return (
          <View
            style={[
              tw`p-4 rounded-lg mb-4 border-l-4`,
              {
                backgroundColor: currentTheme.colors.error + "10",
                borderLeftColor: currentTheme.colors.error,
              },
            ]}
          >
            <View style={tw`flex-row items-center mb-2`}>
              <MaterialCommunityIcons
                name="alert"
                size={20}
                color={currentTheme.colors.error}
              />
              <Text
                style={[
                  tw`text-base font-semibold ml-2`,
                  { color: currentTheme.colors.error },
                ]}
              >
                Attention
              </Text>
            </View>
            <Text
              style={[
                tw`text-base leading-6`,
                { color: currentTheme.colors.text },
              ]}
            >
              {content.content}
            </Text>
          </View>
        );

      case "tip":
        return (
          <View
            style={[
              tw`p-4 rounded-lg mb-4 border-l-4`,
              {
                backgroundColor: currentTheme.colors.success + "10",
                borderLeftColor: currentTheme.colors.success,
              },
            ]}
          >
            <View style={tw`flex-row items-center mb-2`}>
              <MaterialCommunityIcons
                name="lightbulb"
                size={20}
                color={currentTheme.colors.success}
              />
              <Text
                style={[
                  tw`text-base font-semibold ml-2`,
                  { color: currentTheme.colors.success },
                ]}
              >
                Conseil
              </Text>
            </View>
            <Text
              style={[
                tw`text-base leading-6`,
                { color: currentTheme.colors.text },
              ]}
            >
              {content.content}
            </Text>
          </View>
        );

      default:
        return null;
    }
  };

  if (selectedItem) {
    return (
      <View style={tw`flex-1`}>
        <View
          style={[
            tw`flex-row items-center p-4 border-b`,
            { borderBottomColor: currentTheme.colors.border },
          ]}
        >
          <TouchableOpacity
            onPress={() => setSelectedItem(null)}
            style={[
              tw`w-10 h-10 rounded-full items-center justify-center mr-3`,
              { backgroundColor: currentTheme.colors.surface },
            ]}
          >
            <MaterialCommunityIcons
              name="arrow-left"
              size={24}
              color={currentTheme.colors.text}
            />
          </TouchableOpacity>
          <View style={tw`flex-1`}>
            <Text
              style={[
                tw`text-xl font-bold`,
                { color: currentTheme.colors.text },
              ]}
            >
              {selectedItem.title}
            </Text>
            <Text
              style={[
                tw`text-sm mt-1`,
                { color: currentTheme.colors.textSecondary },
              ]}
            >
              {selectedItem.description}
            </Text>
          </View>
        </View>

        <ScrollView
          style={tw`flex-1`}
          contentContainerStyle={tw`p-4`}
          showsVerticalScrollIndicator={false}
        >
          {selectedItem.content.map((content, index) => (
            <Animated.View key={index} entering={FadeInDown.delay(index * 100)}>
              {renderContent(content)}
            </Animated.View>
          ))}
        </ScrollView>
      </View>
    );
  }

  return (
    <View style={tw`flex-1`}>
      <Text
        style={[
          tw`text-xl font-bold mb-4 px-4`,
          { color: currentTheme.colors.text },
        ]}
      >
        ‚öôÔ∏è Guide des param√®tres IA
      </Text>

      <ScrollView
        style={tw`flex-1`}
        contentContainerStyle={tw`px-4 pb-4`}
        showsVerticalScrollIndicator={false}
      >
        {aiSettingsGuides.map((guide, index) => (
          <Animated.View
            key={guide.id}
            entering={FadeInDown.delay(index * 100)}
          >
            <TouchableOpacity
              style={[
                tw`p-4 rounded-xl mb-3 border`,
                {
                  backgroundColor: currentTheme.colors.surface,
                  borderColor: currentTheme.colors.border,
                },
              ]}
              onPress={() => setSelectedItem(guide)}
            >
              <View style={tw`flex-row items-center`}>
                <View
                  style={[
                    tw`w-12 h-12 rounded-xl items-center justify-center mr-4`,
                    { backgroundColor: guide.color + "15" },
                  ]}
                >
                  <MaterialCommunityIcons
                    name={guide.icon as any}
                    size={24}
                    color={guide.color}
                  />
                </View>
                <View style={tw`flex-1`}>
                  <Text
                    style={[
                      tw`text-lg font-semibold mb-1`,
                      { color: currentTheme.colors.text },
                    ]}
                  >
                    {guide.title}
                  </Text>
                  <Text
                    style={[
                      tw`text-sm leading-5`,
                      { color: currentTheme.colors.textSecondary },
                    ]}
                  >
                    {guide.description}
                  </Text>
                </View>
                <MaterialCommunityIcons
                  name="chevron-right"
                  size={24}
                  color={currentTheme.colors.textSecondary}
                />
              </View>
            </TouchableOpacity>
          </Animated.View>
        ))}
      </ScrollView>
    </View>
  );
};
